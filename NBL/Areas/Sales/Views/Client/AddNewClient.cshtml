@model NblClassLibrary.Models.Client

@{
    ViewBag.Title = "Add New Client";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
}
<style>
    label.error {
        color: #FF0000;
    }
</style>
<!-- Main content -->
<section class="content">


    @if (ViewBag.Message != null)
    {<p class="text-center text-success" id="message">
        @Html.Raw(ViewBag.Message)
    </p>
    }


    @if (ViewBag.Error != null)
    {
        <p class="text-center text-danger">
            @Html.Raw(ViewBag.Error)
        </p>
    }
    <h2 class="text-center text-green" style="margin-top:0;padding-top:0;">Add New Client</h2>
    <form id="addNewClientForm" method="POST" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="TypeId" name="TypeId">
                                <option value="">--Select--</option>
                                @foreach (var item in ViewBag.ClientTypes)
                                {
                                    <option value="@item.ClientTypeId">@item.ClientTypeName</option>
                                }

                            </select>

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter client Name", id = "ClientName", required = "required" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter client Address", id = "Address" } })

                        </div>
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.DivisionId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">

                                <select class="form-control" id="DivisionId" name="DivisionId">
                                    @foreach (var item in ViewBag.Divisions)
                                    {
                                        <option value="@item.DivisionId" @(item.DivisionId == Model.DivisionId ? "selected" : String.Empty)>@item.DivisionName</option>
                                    }

                                </select>

                            </div>
                        </div>*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="RegionId" name="RegionId">
                                <option value="">--Select--</option>
                                @foreach (var item in ViewBag.Regions)
                                {
                                    <option value="@item.RegionId">@item.RegionName</option>
                                }

                            </select>

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="DistrictId" name="DistrictId">
                                <option value="">--Select--</option>
                            </select>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UpazillaId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="UpzillaId" name="UpzillaId">
                                <option value="">--Select--</option>

                            </select>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostOfficeId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="PostOfficeId" name="PostOfficeId">
                                <option value="">--Select--</option>

                            </select>

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NationalIdNo, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.NationalIdNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter client NID", id = "NationalIdNo" } })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TinNo, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.TinNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter client TIN", id = "TinNo" } })

                        </div>
                    </div>

                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter client phone", id = "Phone" } })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AlternatePhone, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.AlternatePhone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter client Alternate phone", id = "AlternatePhone" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="Gender" name="Gender">
                                <option value="M">Male</option>
                                <option value="F">Famale</option>
                                <option value="O">Others</option>
                            </select>
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientImage, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <input type="file" name="file" id="file" style="width: 100%;" required />
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ClientSignature, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <input type="file" name="ClientSignature" id="ClientSignature" style="width: 100%;" required />
                        </div>

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "E-mail Address", id = "Email" } })
                            <div id="divEmailExitsOutput"></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", @placeholder = "Client Fax", id = "Fax" } })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @placeholder = "Website", id = "Website" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TerritoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <select class="form-control" id="TerritoryId" name="TerritoryId">
                                <option value="">--Select--</option>
                            </select>

                        </div>
                    </div>

                    <div class="form-group">

                        <div class="col-md-9 col-md-offset-3">
                            <div class="row">
                                <div class="col-md-4">
                                    @Html.ActionLink("Back to List", "All", "Client", new { area = "Sales" }, new { @class = "btn btn-info" })
                                </div>
                                <div class="col-md-4">
                                    <input type="button" value="Cancel" class="btn btn-danger btn-block" onclick="ClearInputFields()" />
                                </div>
                                <div class="col-md-4">
                                    <input type="submit" value="Save" class="btn btn-primary btn-block" />
                                    @*<input type="button" value="Save" onclick="SaveClient(this)" class="btn btn-primary btn-block" />*@
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>



        </div>
    </form>
</section>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js">
</script>
<script src="~/Scripts/jquery.validate.js"></script>

@* Cascading dropdons implementations *@
<script>

    $("#RegionId").change(function () {
        //var divId = $(this).val();
        var regionId = $(this).val();
        $("#DistrictId").empty();
        $("#UpzillaId").empty();
        $("#PostOfficeId").empty();
        $("#TerritoryId").empty();
        $("#DistrictId").append('<option value="">--Select--</option>');
        $("#UpzillaId").append('<option value="">--Select--</option>');
        $("#PostOfficeId").append('<option value="">--Select--</option>');
        $("#TerritoryId").append('<option value="">--Select--</option>');
        //var json = { divisionId: divId };
        var json = { regionId: regionId };

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetDistrictByRegionId", "Common", new { area = "" })',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {


                $.each(data, function (key, value) {
                    //alert(key);
                    $("#DistrictId").append('<option value=' + value.DistrictId + '>' + value.DistrictName + '</option>');

                });
            }
        });

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetTerritoryByRegionId", "Common", new { area = "" })',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {


                $.each(data, function (key, value) {
                    //alert(key);
                    $("#TerritoryId").append('<option value=' + value.TerritoryId + '>' + value.TerritoryName + '</option>');

                });
            }
        });
    });

    $("#DistrictId").change(function () {
        var disId = $("#DistrictId").val();
        $("#UpzillaId").empty();
        $("#UpzillaId").append('<option value="">--Select--</option>');
        $("#PostOfficeId").empty();
        $("#PostOfficeId").append('<option value="">--Select--</option>');

        var json = { districtId: disId };

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetUpazillaByDistrictId", "Common", new { area = "" })',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {


                $.each(data, function (key, value) {
                    //alert(key);
                    $("#UpzillaId").append('<option value=' + value.UpazillaId + '>' + value.UpazillaName + '</option>');

                });
            }
        });

    });

    $("#UpzillaId").change(function () {
        var upaId = $("#UpzillaId").val();
        $("#PostOfficeId").empty();
        $("#PostOfficeId").append('<option value="">--Select--</option>');

        var json = { upazillaId: upaId };

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetPostOfficeByUpazillaId", "Common", new { area = "" })',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(json),
            success: function (data) {


                $.each(data, function (key, value) {
                    //alert(key);
                    $("#PostOfficeId").append('<option value=' + value.PostOfficeId + '>' + value.PostOfficeName + '</option>');

                });
            }
        });

    });

</script>
@*Jquery Validation*@
<script>
    $("#addNewClientForm").validate({
        rules: {
            ClientName: "required",
            DivisionId: "required",
            Address: "required",
            DistrictId: "required",
            UpzillaId: "required",
            PostOfficeId: "required",
            TypeId: "required",
            Phone: "required",
            AlternatePhone: "required",
            Email: {
                required: true,
                email: true
            },


        },
        messages: {
            ClientName: "*",
            DivisionId: "*",
            Address: "*",
            DistrictId: "*",
            UpzillaId: "*",
            PostOfficeId: "*",
            TypeId: "*",
            Phone: "*",
            AlternatePhone: "*",
            Email: {
                required: "*",
                email: "Please! Enter a valid Email Address."
            },

        }
    });
</script>
@*Ajax form Submit*@
<script>

    function SaveClient(btnClicked) {


        var $form = $(btnClicked).parents('addNewClientForm');
        $.ajax({
            type: "POST",
            url: '@Url.Action("Create")',
            data: $form.serialize(),
            error: function (xhr, status, error) {
                //do something about the error
            },
            success: function (response) {
                alert("Saved Successfully");

            }
        });

        return false;// if it's a link to prevent post

    }

</script>

<script>


    function ClearInputFields() {
        $("#DistrictId").empty();
        $("#UpzillaId").empty();
        $("#PostOfficeId").empty();
        $("#DistrictId").append('<option value="">--Select--</option>');
        $("#UpzillaId").append('<option value="">--Select--</option>');
        $("#PostOfficeId").append('<option value="">--Select--</option>');
        $("#ClientName").val('');
        $("#Address").val('');
        $("#Phone").val('');
        $("#AlternatePhone").val('');
        $("#Email").val('');
        $("#Fax").val('');
        $("#Website").val('');
        $("#message").Clear();
    }

</script>

@*Is e-mail exits or not*@
<script type="text/javascript">
    $(document).ready(function () {

        $('#Email').keyup(function () {
            var email = $(this).val();

            if (email.length >= 1) {
                $.ajax({
                    url: '/Sales/Client/ClientEmailExists',
                    method: 'post',
                    data: { email: email },
                    dataType: 'json',
                    success: function (data) {
                        var divElement = $('#divEmailExitsOutput');
                        if (data.EmailInUse) {
                            divElement.text('The E-mail address "' + data.Email + '" is already in use');
                            divElement.css('color', 'red');
                        }
                        else {
                            divElement.text('The E-mail  address "' + data.Email + '" is available')
                            divElement.css('color', 'green');
                        }
                    },
                    error: function (err) {
                        alert(err);
                    }
                });
            }
        });
    });
</script>