
@model NblClassLibrary.Models.Product

@{
    ViewBag.Title = "Transaction";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
    var tdate = DateTime.Now.Date.ToString("dd-MMMM-yyyy");
}

<section class="content">

    @using (Html.BeginForm("TempTransaction", "Product", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h3 class="text-center text-green" style="margin-top: 0;">Transfer Product</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <p class="text-center">
                @if (TempData["message"] != null)
                {
                    @TempData["message"]
                }
            </p>

            <div class="col-md-6 col-md-offset-3">
                <div class="form-group">
                    <label for="TransactionDate" class="control-label col-md-3">Date</label>
                    <div class="col-md-9">
                        <input type="text" id="TransactionDate" name="TransactionDate" value="@tdate" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">To Branch :</label>
                    <div class="col-md-9">
                        <input type="text" name="ToBranchName" id="ToBranchName" class="form-control" placeholder="Branch Name" required />
                        <input type="hidden" id="BranchId" name="BranchId" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">Product Name : </label>
                    <div class="col-md-9">
                        <input type="text" name="ProductName" id="ProductName" class="form-control" placeholder="Type Product Name" required />
                        <input type="hidden" id="ProductId" name="ProductId" />
                    </div>
                </div>

                <div class="form-group">
                    <label for="ProductId" class="control-label col-md-3">Quantity in Stock :</label>
                    <div class="col-md-9">

                        <input type="number" id="StockQty" name="StockQty" class="form-control" readonly value="0" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-3">Quantity :</label>
                    <div class="col-md-9">
                        <input type="number" name="Quantity" id="Quantity" class="form-control" placeholder="Quantity" required />

                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="button" value="Add" class="btn btn-primary" onclick="AddProduct(this)" id="addItemButton" disabled="disabled" />
                    </div>
                </div>



            </div>



        </div>
    }

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "updateQuantiyForm" }))
    {
        <input type="hidden" id="productIdToRemove" name="productIdToRemove" />

        <table class="table table-bordered" style="margin: 0; padding: 0;">

            <thead>

                <tr>
                    <th style="border: 1px solid black;" class="text-center">Product Name</th>
                    <th style="border: 1px solid black; width: 10%" class="text-center">Quantity</th>
                    <th style="border: 1px solid black;" class="text-center">Action</th>
                </tr>
            </thead>
            <tbody id="orders"></tbody>
        </table>
    }
    <hr />
    <div class="row text-right">

        @using (Html.BeginForm("Transaction", "Product", FormMethod.Post, new { id = "transportationForm" }))
        {
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">

                    <input type="submit" value="Transfer" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>

</section>

@*Autocomplete*@

<script type="text/javascript">
    $(function () {
        $("#ProductName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Common/ProductAutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data,
                            function(item) {
                                return item;
                            }));
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#ProductId").val(i.item.val);
                var pId = $("#ProductId").val();
                //alert(i.item.val);
                var json = { productId: pId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetProductQuantityInStockById", "Common",new {area="" })',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (data) {

                        var qty = data.StockQty;
                        $("#StockQty").val(qty);
                    }
                });

            },
            minLength: 1
        });
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#ToBranchName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Common/BranchAutoComplete/',
                    data: "{ 'prefix': '" + request.term + "'}",
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data,
                            function(item) {
                                return item;
                            }));
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#BranchId").val(i.item.val);

            },
            minLength: 1
        });
    });
</script>

<script>

    function AddProduct(btnClicked) {
        //alert(btnClicked.id);

        var stock = $("#StockQty").val();
        var qty = $("#Quantity").val();
        if (stock - qty >= 0) {
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: '@Url.Action("TempTransaction")',
                data: $form.serialize(),
                error: function(xhr, status, error) {
                    //do something about the error
                },
                success: function(response) {
                    //alert("Saved Successfully");
                    ViewTempOrders();

                }
            });

            return false; // if it's a link to prevent post
        } else {
            alert("Quantity Out of Stock!");
        }

    }

    function Update(btnClicked) {
        $("#productIdToRemove").val(0);

        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            url: '@Url.Action("Update")',
            data: $form.serialize(),
            error: function (xhr, status, error) {
                //do something about the error
            },
            success: function (response) {
                //alert("Saved Successfully");
                ViewTempOrders();
            }
        });

        return false; // if it's a link to prevent post


    }
    function RemoveProduct(btnClicked) {


        if (confirm("Are you sure to remove this product ??")) {
            //alert(btnClicked);
            $("#productIdToRemove").val(btnClicked.id);
            //alert(btnClicked.id);
            //alert(btnClicked["delBtn"]);
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: '@Url.Action("Update")',
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    //do something about the error
                },
                success: function (response) {
                    //alert("Saved Successfully");
                    ViewTempOrders();
                }
            });
        } else {
            return false;// if it's a link to prevent post
        }

        return false;// if it's a link to prevent post

    }

    function ViewTempOrders() {
        $("#orders").html("");
        //alert("Hi");

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetTempTransaction", "Product")',
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var total = 0;
                for (var i = 0; i < data.length; i++) {
                    total = total + data[i].SubTotal;
                }
                $.each(data, function (key, value) {

                    //total =+ value.SubTotal;
                    //alert(key);
                    //$("#orders").append('<option value=' + value.ClientId + '>' + value.ProductId + '</option>');
                    var row = $("<tr><td style='border: 1px solid black; padding: 5px 10px;'>" + value.ProductName + "</td><td style='border: 1px solid black; padding: 5px 10px;'>  <input type='number' min='1' value='" + value.Quantity + "' class='form-control text-right' id='" + value.ProductId + "' name='NewQuantity_" + value.ProductId + "' onchange='Update(this)'/>" + "</td><td style='border: 1px solid black; padding: 5px 10px;' class='text-center'><input type='hidden' name='product_Id_" + value.ProductId + "' value='" + value.ProductId + "'> "+"<button id='" + value.ProductId + "' type='button' onclick='RemoveProduct(this)' class='btn btn-default btn-sm'><i class='fa fa-times' style='color:red;'></i></button>" + "</td></tr>");

                    $("#orders").append(row);
                });
                $("#Total").val(total);
                var com = $("#SpecialComision").val();
                var net = total - com;
                $("#Net").val(net);
            }
        });
    }
</script>
<script>
    function doCheck() {
        var allFilled = true;

        var inputs = document.getElementsByTagName('input');
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == "text" && inputs[i].value == '') {
                allFilled = false;
                break;
            }
        }

        document.getElementById("addItemButton").disabled = !allFilled;
    }

    window.onload = function () {
        var inputs = document.getElementsByTagName('input');
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == "text") {
                inputs[i].onkeyup = doCheck;
                inputs[i].onblur = doCheck;
            }
        }
    };


</script>

<script>
    $(function () {

        $("#TransactionDate").datepicker({ dateFormat: 'dd-MM-yy' });

    } );
</script>
