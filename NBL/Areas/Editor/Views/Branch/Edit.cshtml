@model NblClassLibrary.Models.Branch

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_UserLayoutPage.cshtml";
    var date = Model.BranchOpenigDate.Date.ToString("dd/MMMM/yyyy");
}

<section class="content" style="margin:0;padding:0;">
    <div class="col-md-6 col-md-offset-3">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4 class="text-center text-green headingStyle">Update Branch Information</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BranchId)

                <div class="form-group">
                    @Html.LabelFor(model => model.BranchName, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                   
                    @Html.LabelFor(model=>model.BranchAddress,new {@class="control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.TextAreaFor(model=>model.BranchAddress,new {@class="form-control",placeholder="Bracnh Address..",rows=2, style="resize:none"})
                        @Html.ValidationMessageFor(model=>model.BranchAddress,"",new {@class="text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BranchPhone, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BranchPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchPhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BranchEmail,new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BranchEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BranchOpenigDate,new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" id="BranchOpenigDate" name="BranchOpenigDate" value="@date" class="form-control" required/>
                        @Html.ValidationMessageFor(model => model.BranchOpenigDate, "", new { @class = "text-danger" })
                    </div>
                </div>

               
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.ActionLink("Back to List", "ViewBranch", "Branch", new { @class = "btn btn-danger" })
                        <input type="submit" value="Update" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

    </div>
</section>

<script>
    $(function () {

        $("#BranchOpenigDate").datepicker({ dateFormat: 'dd-MM-yy' });

    } );
</script>